<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
    	<link rel="canonical" href="https://clashgithub.github.io/news/article-73955.htm" />
	<title>Git基础Commit对象</title>
	<!-- for-mobile-apps -->
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<link rel="icon" href="/assets/website/img/clashgithub/favicon.ico" type="image/x-icon"/>
		<meta name="description" content="目录  1、Commit对象介绍 2、Commit对象说明 3、本地库中对象之间的关系 4、总结 5、练习 6、本文用到的命令总结   1、Commit对象介绍 现在来介绍最后一种Git对象commi" />
	
    <meta name="author" content="Clash Github官方机场站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashgithub.github.io/news/article-73955.htm" />
    <meta property="og:site_name" content="Clash Github官方机场站" />
    <meta property="og:title" content="Git基础Commit对象" />
    <meta property="og:image" content="https://clashgithub.github.io/uploads/20240228/33b1ff2369380b61bcbd99951db89701.webp" />
        <meta property="og:release_date" content="2025-03-15T07:18:07" />
    <meta property="og:updated_time" content="2025-03-15T07:18:07" />
        <meta property="og:description" content="目录  1、Commit对象介绍 2、Commit对象说明 3、本地库中对象之间的关系 4、总结 5、练习 6、本文用到的命令总结   1、Commit对象介绍 现在来介绍最后一种Git对象commi" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Git基础Commit对象">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
        
	<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false);
			function hideURLbar(){ window.scrollTo(0,1); } </script>
	<!-- //for-mobile-apps -->
	<link href="/assets/website/css/clashgithub/bootstrap.css" rel="stylesheet" type="text/css" media="all" />
	<link href="/assets/website/css/clashgithub/style.css" rel="stylesheet" type="text/css" media="all" />
	<!-- js -->
	<script type="text/javascript" src="/assets/website/js/frontend/clashgithub/jquery-2.1.4.min.js"></script>
	<!-- //js -->
	<link href='https://fonts.googleapis.com/css?family=Maven+Pro:400,500,700,900' rel='stylesheet' type='text/css'>
	<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
	<!-- start-smoth-scrolling -->
	<script type="text/javascript">
		jQuery(document).ready(function($) {
			$(".scroll").click(function(event){		
				event.preventDefault();
				$('html,body').animate({scrollTop:$(this.hash).offset().top},1000);
			});
		});
	</script>
	<!-- start-smoth-scrolling -->
	<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-GD12V8FJRL"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-GD12V8FJRL');
</script>
	<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- header -->
	<div class="header" id="ban">
		<div class="container">
			<div class="w3ls_logo">
								<a href="/">ClashGithub</a>
							</div>
			<div class="header_right">
			<nav class="navbar navbar-default">
				<!-- Brand and toggle get grouped for better mobile display -->
				<div class="navbar-header">
					<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
						<span class="sr-only">Toggle navigation</span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
				</div>

				<!-- Collect the nav links, forms, and other content for toggling -->
				<div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
					<nav class="link-effect-7" id="link-effect-7">
						<ul class="nav navbar-nav">
														<li><a href="/">首页</a></li>
														<li><a href="/free-nodes/">免费节点</a></li>
														<li><a href="/paid-subscribe/">推荐机场</a></li>
														<li><a href="/client.htm">客户端</a></li>
														<li><a href="/news/">新闻资讯</a></li>
													</ul>
					</nav>
				</div>
				<!-- /.navbar-collapse -->
			</nav>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //header -->
    <!-- about -->
    <div class="about">
        <div class="container">
            <h1 style="word-break: break-all;">Git基础Commit对象</h1>
            <ul>
                <li><a href="/">首页</a><i>|</i></li>
                <li><a href="/news/">新闻资讯</a><i>|</i></li>
                <li>正文</li>
            </ul>
        </div>
    </div>
    <!-- //about -->
    <!-- single -->
    <div class="single">
        <div class="container">
            <div class="col-md-9">
                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li><a href="#1commit%E5%AF%B9%E8%B1%A1%E4%BB%8B%E7%BB%8D" rel="nofollow">1、Commit对象介绍</a></li> <li><a href="#2commit%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E" rel="nofollow">2、Commit对象说明</a></li> <li><a href="#3%E6%9C%AC%E5%9C%B0%E5%BA%93%E4%B8%AD%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB" rel="nofollow">3、本地库中对象之间的关系</a></li> <li><a href="#4%E6%80%BB%E7%BB%93" rel="nofollow">4、总结</a></li> <li><a href="#5%E7%BB%83%E4%B9%A0" rel="nofollow">5、练习</a></li> <li><a href="#6%E6%9C%AC%E6%96%87%E7%94%A8%E5%88%B0%E7%9A%84%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93" rel="nofollow">6、本文用到的命令总结</a></li> </ul> </div> <h2 id="1commit对象介绍">1、Commit对象介绍</h2> <p>现在来介绍最后一种Git对象<code>commit</code>对象，也叫提交对象。</p> <p>提交对象可以理解为是对树对象的一层封装，提交信息包括基于当前暂存区中索引文件生成的<code>tree</code>对象，还有包含了提交时间，提交者信息，作者信息，以及提交备注等内容，更重要的是里面还包含了父提交的ID，由此就可以形成Git提交的有向无环图。（是链式的关系，把所有<code>commit</code>对象关联起来）</p> <p>即：<code>commit</code>对象通常指向一个<code>tree</code> 对象，并且封装了文件的提交时间，提交者信息，作者信息，提交备注，以及父提交引用等数据。</p> <p>下面是<code>commit</code>对象的存储结构：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/fc6cead3c6a12af6716c89a03a9186d6.jpg" alt="Git基础Commit对象"></p> <h2 id="2commit对象说明">2、Commit对象说明</h2> <p>我们通过练习来说明<code>commit</code>对象，接着用前面<code>Tree</code>对象的本地版本库。</p> <p><strong>（1）创建一个<code>commit</code>对象</strong></p> <p>我们可以通过调用<code>commit-tree</code>命令创建一个提交对象，为此需要指定一个树对象的<code>SHA-1</code>值，以及该提交的父提交对象。</p> <blockquote> <p>说明：使用<code>commit-tree</code>命令来创建提交对象，一般都需要和父提交进行关联，如果是第一次将暂存区的文件索引数据提交到本地版本库，那么该提交操作就不需要指定父提交对象。</p> </blockquote> <p><strong>1）我们可以先查看一下此时Git本地库中的对象，如下</strong>：</p> <pre><code class="language-bash">.git/objects/01/ab2a43b1eb150bcf00f375800727df240cf653 # 第三个tree树对象 .git/objects/0c/1e7391ca4e59584f8b773ecdbbb9467eba1547 # test.txt第二个版本（blob对象） .git/objects/16/3b45f0a0925b0655da232ea8a4188ccec615f5 # 第二个tree树对象 .git/objects/83/baae61804e65cc73a7201a7252750c76066a30 # test.txt第一个版本（blob对象） .git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 # 第一个tree树对象 .git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 # new.txt第一个版本（blob对象）</code></pre> <p><strong>2）我们通过第一个树对象，创建一个<code>commit</code>对象</strong></p> <pre><code class="language-bash"># 1.做提交操作，创建一个commit对象 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ echo 'first commit' | git commit-tree d8329f 3ceba95d3cd9cce982d31e41e3b995ece72f755d  # 2.确定该对象类型 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ git cat-file -t 3ceba95d3c commit  # 3.查看该对象内容 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ git cat-file -p 3ceba95d3c tree d8329fc1cc938780ffdd9f94e0d364e0ea74f579 author sun_wk &lt;sun_wk@126.com&gt; 1618190880 +0800 committer sun_wk &lt;sun_wk@126.com&gt; 1618190880 +0800  first commit</code></pre> <p>说明：</p> <ul> <li><code>tree</code>：表示该<code>commit</code>对象所指向的<code>tree</code>对象的索引</li> <li><code>author</code>：表示该文件的作者。</li> <li><code>committer</code>：表示该文件的提交者。</li> <li><code>first commit</code>：这段文本是提交备注。（备注与前面留空一行）</li> <li>因为是第一次进行<code>commit</code>提交操作，所以没有父提交信息。</li> <li><code>1618190880 +0800</code>：表示时间，一个时间戳。</li> </ul> <blockquote> <p>即：<code>commit</code>对象的格式很简单：指明了该时间点项目快照的顶层树对象、作者/提交者信息（从 Git 设置的<code>user.name</code>和<code>user.email</code>中获得)，以及当前时间戳、留空一行，最后是提交注释。</p> </blockquote> <blockquote> <p>提示：<code>git commit-tree</code>命令不但生成了提交对象，而且会将对应的快照（树对象）提交到本地库中。</p> </blockquote> <p><strong>（2）创建第二个<code>commit</code>对象</strong></p> <p>根据第二个<code>tree</code>对象和第一个<code>commit</code>对象，来创建第二个<code>commit</code>对象。</p> <p>通过<code>-p</code>选项指定父提交对象。</p> <pre><code class="language-bash"># 1.创建第二个commit对象 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ echo 'second commit' | git commit-tree 163b45f0a09 -p 3ceba95d3cd9cc 60e1c209e9de87314ec47cf28e61de8df5362fe6  # 2.查看该对象内容 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ git cat-file -p 60e1c209e9de8 tree 163b45f0a0925b0655da232ea8a4188ccec615f5 parent 3ceba95d3cd9cce982d31e41e3b995ece72f755d author sun_wk &lt;sun_wk@126.com&gt; 1618193286 +0800 committer sun_wk &lt;sun_wk@126.com&gt; 1618193286 +0800  second commit</code></pre> <blockquote> <p><strong>提交对象的格式很简单：</strong></p> <p>它先指定一个顶层树对象，代表当前项目快照；</p> <p>然后是可能存在的父提交；</p> <p>之后是作者/提交者信息（依据你的<code>user.name</code> 和<code>user.email</code> 配置来设定，外加一个时间戳）；</p> <p>留空一行，最后是提交注释。</p> </blockquote> <p>第三个<code>commit</code>提交，同上，这里就不演示了。</p> <h2 id="3本地库中对象之间的关系">3、本地库中对象之间的关系</h2> <p>我们可以查看一下此时Git本地库中的对象</p> <pre><code class="language-bash">.git/objects/01/ab2a43b1eb150bcf00f375800727df240cf653 # 第三个tree树对象 .git/objects/0c/1e7391ca4e59584f8b773ecdbbb9467eba1547 # test.txt第二个版本（blob对象） .git/objects/16/3b45f0a0925b0655da232ea8a4188ccec615f5 # 第二个tree树对象 .git/objects/3c/eba95d3cd9cce982d31e41e3b995ece72f755d # 第一个commit提交对象 .git/objects/46/ab608799a0e65e970b67b9b52f6c1407c39036 # 第三个commit提交对象 .git/objects/60/e1c209e9de87314ec47cf28e61de8df5362fe6 # 第二个commit提交对象 .git/objects/83/baae61804e65cc73a7201a7252750c76066a30 # test.txt第一个版本（blob对象） .git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 # 第一个tree树对象 .git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 # new.txt第一个版本（blob对象）</code></pre> <p>可以从上面看到，此时的本地版本库中共有9个对象，三个<code>blob</code>对象，三个<code>tree</code>对象，三个<code>commit</code>对象。</p> <p>他们之间的关系如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6e7381388ce04479de07f84404df9fe6.jpg" alt="Git基础Commit对象"></p> <h2 id="4总结">4、总结</h2> <ol> <li>提交是我们经常使用的Git动作，每次提交操作都指向一个树对象，同时会产生一个<code>commit</code>对象。<br /> 即：一个<code>commit</code>对象包含了一个<code>tree</code>对象，这个<code>tree</code>对象记录了在那个时间点，项目包含了什么文件夹和什么文件。</li> <li>一个提交对象可以有一个或者多个父提交。</li> <li>每次<code>commit</code>操作都会基于当前索引文件index新建<code>tree</code>对象。那么当前索引文件，是在上次提交的基础上更新来的，所以每次提交产生的<code>commit</code>对象，与其他的<code>commit</code>对象，都有前后关系或者称为父子关系。</li> <li>对于我们来说，不需要直接访问<code>blob</code>对象和<code>tree</code>对象，我们直接访问<code>commit</code>对象就可以了。<br /> 即：<code>commit</code>对象对应的<code>tree</code>对象下面，又包含了小的<code>tree</code>对象和<code>blob</code>对象，子的<code>tree</code>对象一层层展开，最后叶子节点就是一个个<code>blob</code>对象，也就是一个个文件。</li> </ol> <blockquote> <p>到这里，我们就能够清楚的了解，什么叫一个Git版本。<code>tree</code>对象才是一次项目版本的快照，提交对象是对<code>tree</code>对象的一次封装。</p> <p>即：</p> <ul> <li>项目的快照就是一个树对象。</li> <li>项目的版本就是一个提交对象。</li> </ul> <p>而且Git的每一个版本，存储的不是增量，而存储的是当前项目的快照。同时<code>objects</code>目录中相当于存放了项目的所有历史记录，回滚就相当的方便了，找到对应的<code>commit</code>对象的hash就可以了。</p> </blockquote> <h2 id="5练习">5、练习</h2> <p>请问下图中包含多少个<code>tree</code>对象和<code>blob</code>对象？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/04824b7f00f79e7ae6f9a6a1ea8f2525.jpg" alt="Git基础Commit对象"></p> <p>一共包含两个<code>tree</code>对象，一个<code>blob</code>对象，一个<code>commit</code>对象。</p> <p>说明：</p> <ul> <li>一个<code>commit</code>对象一定对应一个<code>tree</code>对象（这个<code>tree</code>对象应该是一个完整项目仓库的快照）</li> <li><code>doc</code>目录下有一个<code>blob</code>对象，也就是<code>readme</code>文件。</li> </ul> <h2 id="6本文用到的命令总结">6、本文用到的命令总结</h2> <p>Git底层命令：</p> <ul> <li><code>git commit-tree</code>：生成一个<code>commit</code>对象。</li> <li><code>git cat-file -t 键</code>：查看Git对象的类型。</li> <li><code>git cat-file -p 键</code>：查看Git对象的内容。</li> </ul> <blockquote> <p>参考：</p> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/songyuequan/article/details/85862415"  target="_blank" rel="nofollow">https://blog.csdn.net/songyuequan/article/details/85862415</a></li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/jasongrass/p/10582465.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/jasongrass/p/10582465.html</a></li> </ul> </blockquote> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-73289.htm">动物疫苗厂家排名前十有哪些品种 动物疫苗厂家排名前十有哪些品种的</a></p>
                                        <p>下一个：<a href="/news/article-73956.htm">宠物医院社会实践心得（宠物医院实践活动总结）</a></p>
                                    </div>
                            </div>
            <div class="col-md-3">
                <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-73289.htm" title="动物疫苗厂家排名前十有哪些品种 动物疫苗厂家排名前十有哪些品种的">动物疫苗厂家排名前十有哪些品种 动物疫苗厂家排名前十有哪些品种的</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-3-free-clash.htm" title="2月3日→19.1M/S|2025年最新免费节点SSR/Clash/Shadowrocket/V2ray订阅链接地址，便宜机场推荐">2月3日→19.1M/S|2025年最新免费节点SSR/Clash/Shadowrocket/V2ray订阅链接地址，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-50737.htm" title="被猫咬了怎么判断没事猫没打疫苗（被猫咬了怎么判断猫有没有狂犬）">被猫咬了怎么判断没事猫没打疫苗（被猫咬了怎么判断猫有没有狂犬）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-11-free-high-speed-nodes.htm" title="2月11日→22.5M/S|2025年最新免费节点Clash/Shadowrocket/V2ray/SSR订阅链接地址，便宜机场推荐">2月11日→22.5M/S|2025年最新免费节点Clash/Shadowrocket/V2ray/SSR订阅链接地址，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-node-share.htm" title="3月11日→22.3M/S|2025年最新免费节点Shadowrocket/Clash/V2ray/SSR订阅链接地址，便宜机场推荐">3月11日→22.3M/S|2025年最新免费节点Shadowrocket/Clash/V2ray/SSR订阅链接地址，便宜机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-69986.htm" title="Shell常用脚本：Nginx安装脚本">Shell常用脚本：Nginx安装脚本</a></li>
                        <li class="py-2"><a href="/news/article-48692.htm" title="动物疫苗的种类及作用有哪些图片（动物疫苗的正确使用方法）">动物疫苗的种类及作用有哪些图片（动物疫苗的正确使用方法）</a></li>
                        <li class="py-2"><a href="/news/article-44242.htm" title="猫该打狂犬疫苗吗（猫该不该打狂犬）">猫该打狂犬疫苗吗（猫该不该打狂犬）</a></li>
                        <li class="py-2"><a href="/news/article-41757.htm" title="义乌领养宠物猫吧最新消息（义乌宠物收容中心在哪）">义乌领养宠物猫吧最新消息（义乌宠物收容中心在哪）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-16-free-node-subscribe-links.htm" title="2月16日→18.6M/S|2025年最新免费节点V2ray/Shadowrocket/SSR/Clash订阅链接地址，便宜机场推荐">2月16日→18.6M/S|2025年最新免费节点V2ray/Shadowrocket/SSR/Clash订阅链接地址，便宜机场推荐</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- //single -->
    <!-- footer -->
	
	<div class="copy-right-social">
		<div class="container">
			<div class="footer-pos">
				<a href="#ban" class="scroll"><img src="/assets/website/img/clashgithub/arrow.png" alt=" " class="img-responsive" /></a>
			</div>
            <div class="col-lg-8 footer-left">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p class="m-0">Clash Github官方机场站 版权所有</p>
            </div>
			<div class="copy-right-social1">
				<div class="w3l_social_icons w3l_social_icons1">
					<ul>
						<li><a href="#" class="facebook"></a></li>
						<li><a href="#" class="twitter"></a></li>
						<li><a href="#" class="google_plus"></a></li>
						<li><a href="#" class="pinterest"></a></li>
						<li><a href="#" class="instagram"></a></li>
					</ul>
				</div>
			</div>
			<div class="clearfix"> </div>
		</div>
	</div>
<!-- //footer -->
<!-- for bootstrap working -->
	<script src="/assets/website/js/frontend/clashgithub/bootstrap.js"></script>
	<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>